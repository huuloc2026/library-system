// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Book {
  id           Int         @id @default(autoincrement())
  title        String
  author       String
  isbn         String      @unique
  publishedAt  DateTime
  totalCopies  Int         // Số lượng sách trong thư viện
  availableCopies Int      // Số lượng sách còn lại có thể mượn
  borrowings   Borrowing[]
}

model Employee {
  id           Int         @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String      @unique
  phoneNumber  String
  borrowings   Borrowing[]
  notifications Notification[]
}

model Borrowing {
  id           Int       @id @default(autoincrement())
  borrowDate   DateTime  @default(now())
  returnDate   DateTime?
  employeeId   Int
  bookId       Int
  status       BorrowStatus  // Trạng thái mượn sách (chưa trả, đã trả)

  employee     Employee @relation(fields: [employeeId], references: [id])
  book         Book     @relation(fields: [bookId], references: [id])
}

model Notification {
  id           Int       @id @default(autoincrement())
  message      String
  sentAt       DateTime  @default(now())
  employeeId   Int

  employee     Employee @relation(fields: [employeeId], references: [id])
}

enum BorrowStatus {
  PENDING  // Đang mượn
  RETURNED // Đã trả
}